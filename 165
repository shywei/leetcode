/*
	比较版本号 版本字符串由以点 （.） 分隔的数字字符串组成。这个数字字符串可能有前导零。 版本字符串不以点开始或结束，并且其中不会有两个连续的点。
	示例 :
	输入: version1 = "0.1", version2 = "1.1" 输出: -1
	输入: version1 = "1.0.1", version2 = "1" 输出: 1
	输入: version1 = "7.5.2.4", version2 = "7.5.3" 输出: -1
	输入：version1 = "1.01", version2 = "1.001" 输出：0 解释：忽略前导零，“01” 和 “001” 表示相同的数字
	输入：version1 = "1.0", version2 = "1.0.0" 输出：0 

	来源：力扣（LeetCode）
	链接：https://leetcode-cn.com/problems/sum-of-root-to-leaf-binary-numbers
	著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

public static int compareVersion(String version1, String version2) {
	String[] arr1 = version1.split("\\.");
	String[] arr2 = version2.split("\\.");
	int count = arr1.length > arr2.length ? arr1.length:arr2.length;
	for(int i = 0; i < count;i++) {
		int value1 = arr1.length > i ? Integer.parseInt(arr1[i]):0;
		int value2 = arr2.length > i ? Integer.parseInt(arr2[i]):0;
		if(value1 > value2) {
			return 1;
		}else if(value1 < value2) {
			return -1;
		}else if(i == count-1){
			return 0;
		}
	}
	return 0;
}

/* 思路：根据点号拆分字符串，转换成数字类型再依次比较，段数不一致时用0比较 */
